"""
–ê–≥—Ä–µ–≥–∞—Ç–æ—Ä –¥–ª—è ArbitPro.

–≠—Ç–æ—Ç –º–æ–¥—É–ª—å –∑–∞–ø—É—Å–∫–∞–µ—Ç –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç P2P‚Äë–æ—Ä–¥–µ—Ä–∞ –Ω–∞ –±–∏—Ä–∂–∞—Ö,
–ø—Ä–∏–º–µ–Ω—è–µ—Ç —Ñ–∏–ª—å—Ç—Ä—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ Telegram‚Äë–±–æ—Ç.
–ï—Å–ª–∏ –æ—Ä–¥–µ—Ä —Å–æ–¥–µ—Ä–∂–∏—Ç —Å—Å—ã–ª–∫—É, –æ–Ω–∞ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –≤ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∫ HTML‚Äë—Å—Å—ã–ª–∫–∞.
"""
import asyncio
import logging
from typing import Optional

from aiohttp import ClientSession
from config import FILTERS_FILE
from services.filter_engine import apply_filters
from services.p2p_fetcher import P2PFetcher

async def fetch_p2p_orders(session: ClientSession):
    """–ü–æ–ª—É—á–∏—Ç—å –æ—Ä–¥–µ—Ä–∞ —Å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö P2P‚Äë–±–∏—Ä–∂."""
    fetcher = P2PFetcher(session)
    return await fetcher.fetch_orders()

async def start_aggregator(session: ClientSession, bot):
    """–ó–∞–ø—É—Å—Ç–∏—Ç—å —Ü–∏–∫–ª –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä–∞: –ø–æ–ª—É—á–µ–Ω–∏–µ –æ—Ä–¥–µ—Ä–æ–≤, —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è."""
    logging.info("üü¢ –ê–≥—Ä–µ–≥–∞—Ç–æ—Ä –∑–∞–ø—É—â–µ–Ω")

    while True:
        try:
            tickers = await fetch_p2p_orders(session)
            logging.info(f"üü¢ P2P –≤–µ—Ä–Ω—É–ª {len(tickers)} –æ—Ä–¥–µ—Ä–æ–≤")
        except Exception as e:
            logging.error("üí• –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö P2P", exc_info=e)
            await asyncio.sleep(15)
            continue

        orders = apply_filters(tickers, FILTERS_FILE)

        for order in orders:
            chat_id: int = order["chat_id"]
            symbol: str = order["symbol"]
            buy = order["buy"]
            sell = order["sell"]
            volume = order["volume"]
            url: Optional[str] = order.get("url")

            # —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            text = (
                f"üì¢ –ù–∞–π–¥–µ–Ω –∞—Ä–±–∏—Ç—Ä–∞–∂ –ø–æ {symbol}:\n"
                f"üí∞ –ü–æ–∫—É–ø–∫–∞: {buy}\n"
                f"üíµ –ü—Ä–æ–¥–∞–∂–∞: {sell}\n"
                f"üì¶ –û–±—ä—ë–º: {volume}"
            )
            if url:
                text += f"\nüîó <a href=\"{url}\">–û—Ç–∫—Ä—ã—Ç—å –æ—Ä–¥–µ—Ä</a>"

            try:
                await bot.send_message(chat_id, text, parse_mode="HTML")
            except Exception as e:
                logging.error(
                    f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_id}",
                    exc_info=e,
                )

        logging.info("üîÅ –¶–∏–∫–ª –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä–∞ –∑–∞–≤–µ—Ä—à—ë–Ω, —Å–ø–∏–º 15 —Å–µ–∫—É–Ω–¥")
        await asyncio.sleep(15)
